/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package netcrawler;

/**
 *
 * @author tom
 */
public class Gui extends javax.swing.JFrame {

    private boolean running;
    
    
    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
        
        // setSize(303, 478);
        
        pack();
        setMinimumSize(getSize());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        hostPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        hostAddressField = new javax.swing.JTextField();
        errorLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        startButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        bridgePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        bridgeMacField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        bridgeGatewayField = new javax.swing.JTextField();
        bridgePortField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        bridgeAddressField = new javax.swing.JTextField();
        connectionPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        connectionNameField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        connectionAddressField = new javax.swing.JTextField();
        connectionPasswordField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PacketTracer Bridge - Configuration Assistent");
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 10, 0};
        layout.rowHeights = new int[] {0, 10, 0, 10, 0, 10, 0};
        getContentPane().setLayout(layout);

        hostPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("PacketTracer Host"));
        java.awt.GridBagLayout jPanel2Layout = new java.awt.GridBagLayout();
        jPanel2Layout.columnWidths = new int[] {0, 10, 0};
        jPanel2Layout.rowHeights = new int[] {0};
        hostPanel.setLayout(jPanel2Layout);

        jLabel5.setText("Address:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        hostPanel.add(jLabel5, gridBagConstraints);

        hostAddressField.setText("192.168.1.5");
        hostAddressField.setToolTipText("Address of a virtual PacketTracer host, to initiate Telnet session to");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        hostPanel.add(hostAddressField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(hostPanel, gridBagConstraints);

        errorLabel.setForeground(new java.awt.Color(255, 51, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        getContentPane().add(errorLabel, gridBagConstraints);

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        jPanel3.add(startButton);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        jPanel3.add(closeButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_END;
        getContentPane().add(jPanel3, gridBagConstraints);

        bridgePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("PacketTracer Bridge"));
        java.awt.GridBagLayout jPanel4Layout = new java.awt.GridBagLayout();
        jPanel4Layout.columnWidths = new int[] {0, 10, 0};
        jPanel4Layout.rowHeights = new int[] {0, 10, 0, 10, 0, 10, 0};
        bridgePanel.setLayout(jPanel4Layout);

        jLabel2.setText("Telnet Server Port:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        bridgePanel.add(jLabel2, gridBagConstraints);

        jLabel6.setText("MAC Address:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        bridgePanel.add(jLabel6, gridBagConstraints);

        bridgeMacField.setText("AA:AA:AA:AA:AA:AA");
        bridgeMacField.setToolTipText("MAC address, including subnetmask, PacketTracer Bridge should use in the PacketTracer cloud");
        bridgeMacField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bridgeMacFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        bridgePanel.add(bridgeMacField, gridBagConstraints);

        jLabel7.setText("Default Gateway:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        bridgePanel.add(jLabel7, gridBagConstraints);

        bridgeGatewayField.setText("192.168.1.254");
        bridgeGatewayField.setToolTipText("Default Gateway in PacketTracer Cloud, to send packets to");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        bridgePanel.add(bridgeGatewayField, gridBagConstraints);

        bridgePortField.setText("23");
        bridgePortField.setToolTipText("Port the Telnet server is listening on on this host");
        bridgePortField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bridgePortFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        bridgePanel.add(bridgePortField, gridBagConstraints);

        jLabel10.setText("Address:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        bridgePanel.add(jLabel10, gridBagConstraints);

        bridgeAddressField.setText("192.168.1.9/24");
        bridgeAddressField.setToolTipText("Address, including subnetmask, PacketTracer Bridge should use in the PacketTracer cloud");
        bridgeAddressField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bridgeAddressFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        bridgePanel.add(bridgeAddressField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(bridgePanel, gridBagConstraints);

        connectionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("PacketTracer Connection"));
        connectionPanel.setLayout(new java.awt.GridBagLayout());

        jLabel4.setText("Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        connectionPanel.add(jLabel4, gridBagConstraints);

        jLabel8.setText("Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        connectionPanel.add(jLabel8, gridBagConstraints);

        connectionNameField.setText("Lab_10");
        connectionNameField.setToolTipText("Any string, naming the connection");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        connectionPanel.add(connectionNameField, gridBagConstraints);

        jLabel9.setText("Address:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        connectionPanel.add(jLabel9, gridBagConstraints);

        connectionAddressField.setText("localhost:38000");
        connectionAddressField.setToolTipText("Address, including Port, hosting the PacketTracer Cloud (physical, not virtual PacketTracer host!)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        connectionPanel.add(connectionAddressField, gridBagConstraints);

        connectionPasswordField.setText("jPasswordField1");
        connectionPasswordField.setToolTipText("Password configured for PacketTracer Cloud");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        connectionPanel.add(connectionPasswordField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(connectionPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        String text;
        if (running) {
            text = "Start";
            
            // TODO: start server            
            // TODO: disable all the other fields. how?
        } else {
            text = "Stop";
            
            // TODO: stop server
        }
        
        startButton.setText(text);
    }//GEN-LAST:event_startButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void bridgeMacFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bridgeMacFieldActionPerformed
    }//GEN-LAST:event_bridgeMacFieldActionPerformed

    private void bridgeAddressFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bridgeAddressFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bridgeAddressFieldActionPerformed

    private void bridgePortFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bridgePortFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bridgePortFieldActionPerformed

    public void showError(String message) {
        errorLabel.setText(message);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
            
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Gui().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bridgeAddressField;
    private javax.swing.JTextField bridgeGatewayField;
    private javax.swing.JTextField bridgeMacField;
    private javax.swing.JPanel bridgePanel;
    private javax.swing.JTextField bridgePortField;
    private javax.swing.JButton closeButton;
    private javax.swing.JTextField connectionAddressField;
    private javax.swing.JTextField connectionNameField;
    private javax.swing.JPanel connectionPanel;
    private javax.swing.JPasswordField connectionPasswordField;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JTextField hostAddressField;
    private javax.swing.JPanel hostPanel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
